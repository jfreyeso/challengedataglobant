AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: API Project for Departments, Jobs and Employees

Parameters:
  Stage:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod

  DBSecretArn:
    Type: String
    Description: ARN of the secret containing Oracle RDS credentials

Globals:
  Function:
    Timeout: 30
    Runtime: python3.12
    MemorySize: 256
    Environment:
      Variables:
        STAGE: !Ref Stage
        DB_SECRET_ARN: !Ref DBSecretArn

Resources:
  # API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  # Departments Lambda Function
  DepartmentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/apis/departments/
      Handler: app.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref DBSecretArn
      Events:
        GetDepartments:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /departments
            Method: get
        GetDepartment:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /departments/{id}
            Method: get
        CreateDepartment:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /departments
            Method: post
        UpdateDepartment:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /departments/{id}
            Method: put
        DeleteDepartment:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /departments/{id}
            Method: delete

  # Jobs Lambda Function
  JobsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/apis/jobs/
      Handler: app.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref DBSecretArn
      Events:
        GetJobs:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /jobs
            Method: get
        GetJob:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /jobs/{id}
            Method: get
        CreateJob:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /jobs
            Method: post
        UpdateJob:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /jobs/{id}
            Method: put
        DeleteJob:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /jobs/{id}
            Method: delete

  # Employees Lambda Function
  EmployeesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/apis/employees/
      Handler: app.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref DBSecretArn
      Events:
        GetEmployees:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /employees
            Method: get
        GetEmployee:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /employees/{id}
            Method: get
        CreateEmployee:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /employees
            Method: post
        UpdateEmployee:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /employees/{id}
            Method: put
        DeleteEmployee:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /employees/{id}
            Method: delete

Outputs:
  ApiURL:
    Description: URL of the API Gateway
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/
  DepartmentsFunction:
    Description: Departments Lambda Function ARN
    Value: !GetAtt DepartmentsFunction.Arn
  JobsFunction:
    Description: Jobs Lambda Function ARN
    Value: !GetAtt JobsFunction.Arn
  EmployeesFunction:
    Description: Employees Lambda Function ARN
    Value: !GetAtt EmployeesFunction.Arn